// Generated by view binder compiler. Do not edit!
package com.zzuh.filot_shoppings.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.zzuh.filot_shoppings.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProductDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backBtn;

  @NonNull
  public final AppCompatButton cartBtn;

  @NonNull
  public final TextView deliveryPriceItem;

  @NonNull
  public final TextView descriptionTv;

  @NonNull
  public final LinearLayout detailContentLayout;

  @NonNull
  public final LinearLayout detailsLayout;

  @NonNull
  public final Toolbar headerToolbar;

  @NonNull
  public final ImageListItemBinding imageListItem1;

  @NonNull
  public final ImageListItemBinding imageListItem2;

  @NonNull
  public final ImageListItemBinding imageListItem3;

  @NonNull
  public final ImageListItemBinding imageListItem4;

  @NonNull
  public final ImageListItemBinding imageListItem5;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final ProgressBar loadingBar;

  @NonNull
  public final Spinner productColorSpinner;

  @NonNull
  public final ImageView productImg;

  @NonNull
  public final TextView productPriceItem;

  @NonNull
  public final Spinner productSizeSpinner;

  @NonNull
  public final AppCompatButton purchaseBtn;

  @NonNull
  public final RecyclerView selectedListRecyclerView;

  @NonNull
  public final ImageView testImg;

  @NonNull
  public final TextView totPriceTv;

  @NonNull
  public final TextView txtError;

  private ActivityProductDetailBinding(@NonNull LinearLayout rootView, @NonNull ImageButton backBtn,
      @NonNull AppCompatButton cartBtn, @NonNull TextView deliveryPriceItem,
      @NonNull TextView descriptionTv, @NonNull LinearLayout detailContentLayout,
      @NonNull LinearLayout detailsLayout, @NonNull Toolbar headerToolbar,
      @NonNull ImageListItemBinding imageListItem1, @NonNull ImageListItemBinding imageListItem2,
      @NonNull ImageListItemBinding imageListItem3, @NonNull ImageListItemBinding imageListItem4,
      @NonNull ImageListItemBinding imageListItem5, @NonNull TextView itemTitle,
      @NonNull ProgressBar loadingBar, @NonNull Spinner productColorSpinner,
      @NonNull ImageView productImg, @NonNull TextView productPriceItem,
      @NonNull Spinner productSizeSpinner, @NonNull AppCompatButton purchaseBtn,
      @NonNull RecyclerView selectedListRecyclerView, @NonNull ImageView testImg,
      @NonNull TextView totPriceTv, @NonNull TextView txtError) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.cartBtn = cartBtn;
    this.deliveryPriceItem = deliveryPriceItem;
    this.descriptionTv = descriptionTv;
    this.detailContentLayout = detailContentLayout;
    this.detailsLayout = detailsLayout;
    this.headerToolbar = headerToolbar;
    this.imageListItem1 = imageListItem1;
    this.imageListItem2 = imageListItem2;
    this.imageListItem3 = imageListItem3;
    this.imageListItem4 = imageListItem4;
    this.imageListItem5 = imageListItem5;
    this.itemTitle = itemTitle;
    this.loadingBar = loadingBar;
    this.productColorSpinner = productColorSpinner;
    this.productImg = productImg;
    this.productPriceItem = productPriceItem;
    this.productSizeSpinner = productSizeSpinner;
    this.purchaseBtn = purchaseBtn;
    this.selectedListRecyclerView = selectedListRecyclerView;
    this.testImg = testImg;
    this.totPriceTv = totPriceTv;
    this.txtError = txtError;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProductDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_product_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProductDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageButton backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.cart_btn;
      AppCompatButton cartBtn = ViewBindings.findChildViewById(rootView, id);
      if (cartBtn == null) {
        break missingId;
      }

      id = R.id.delivery_price_item;
      TextView deliveryPriceItem = ViewBindings.findChildViewById(rootView, id);
      if (deliveryPriceItem == null) {
        break missingId;
      }

      id = R.id.description_tv;
      TextView descriptionTv = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTv == null) {
        break missingId;
      }

      id = R.id.detail_content_layout;
      LinearLayout detailContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailContentLayout == null) {
        break missingId;
      }

      id = R.id.details_layout;
      LinearLayout detailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailsLayout == null) {
        break missingId;
      }

      id = R.id.header_toolbar;
      Toolbar headerToolbar = ViewBindings.findChildViewById(rootView, id);
      if (headerToolbar == null) {
        break missingId;
      }

      id = R.id.image_list_item_1;
      View imageListItem1 = ViewBindings.findChildViewById(rootView, id);
      if (imageListItem1 == null) {
        break missingId;
      }
      ImageListItemBinding binding_imageListItem1 = ImageListItemBinding.bind(imageListItem1);

      id = R.id.image_list_item_2;
      View imageListItem2 = ViewBindings.findChildViewById(rootView, id);
      if (imageListItem2 == null) {
        break missingId;
      }
      ImageListItemBinding binding_imageListItem2 = ImageListItemBinding.bind(imageListItem2);

      id = R.id.image_list_item_3;
      View imageListItem3 = ViewBindings.findChildViewById(rootView, id);
      if (imageListItem3 == null) {
        break missingId;
      }
      ImageListItemBinding binding_imageListItem3 = ImageListItemBinding.bind(imageListItem3);

      id = R.id.image_list_item_4;
      View imageListItem4 = ViewBindings.findChildViewById(rootView, id);
      if (imageListItem4 == null) {
        break missingId;
      }
      ImageListItemBinding binding_imageListItem4 = ImageListItemBinding.bind(imageListItem4);

      id = R.id.image_list_item_5;
      View imageListItem5 = ViewBindings.findChildViewById(rootView, id);
      if (imageListItem5 == null) {
        break missingId;
      }
      ImageListItemBinding binding_imageListItem5 = ImageListItemBinding.bind(imageListItem5);

      id = R.id.item_title;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.loading_bar;
      ProgressBar loadingBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingBar == null) {
        break missingId;
      }

      id = R.id.product_color_spinner;
      Spinner productColorSpinner = ViewBindings.findChildViewById(rootView, id);
      if (productColorSpinner == null) {
        break missingId;
      }

      id = R.id.product_img;
      ImageView productImg = ViewBindings.findChildViewById(rootView, id);
      if (productImg == null) {
        break missingId;
      }

      id = R.id.product_price_item;
      TextView productPriceItem = ViewBindings.findChildViewById(rootView, id);
      if (productPriceItem == null) {
        break missingId;
      }

      id = R.id.product_size_spinner;
      Spinner productSizeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (productSizeSpinner == null) {
        break missingId;
      }

      id = R.id.purchase_btn;
      AppCompatButton purchaseBtn = ViewBindings.findChildViewById(rootView, id);
      if (purchaseBtn == null) {
        break missingId;
      }

      id = R.id.selected_list_recycler_view;
      RecyclerView selectedListRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (selectedListRecyclerView == null) {
        break missingId;
      }

      id = R.id.test_img;
      ImageView testImg = ViewBindings.findChildViewById(rootView, id);
      if (testImg == null) {
        break missingId;
      }

      id = R.id.tot_price_tv;
      TextView totPriceTv = ViewBindings.findChildViewById(rootView, id);
      if (totPriceTv == null) {
        break missingId;
      }

      id = R.id.txt_error;
      TextView txtError = ViewBindings.findChildViewById(rootView, id);
      if (txtError == null) {
        break missingId;
      }

      return new ActivityProductDetailBinding((LinearLayout) rootView, backBtn, cartBtn,
          deliveryPriceItem, descriptionTv, detailContentLayout, detailsLayout, headerToolbar,
          binding_imageListItem1, binding_imageListItem2, binding_imageListItem3,
          binding_imageListItem4, binding_imageListItem5, itemTitle, loadingBar,
          productColorSpinner, productImg, productPriceItem, productSizeSpinner, purchaseBtn,
          selectedListRecyclerView, testImg, totPriceTv, txtError);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
