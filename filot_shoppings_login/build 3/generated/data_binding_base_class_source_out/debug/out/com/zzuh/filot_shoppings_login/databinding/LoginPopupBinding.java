// Generated by view binder compiler. Do not edit!
package com.zzuh.filot_shoppings_login.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.zzuh.filot_shoppings_login.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginPopupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton checkBtn;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout loadingLogin;

  @NonNull
  public final LinearLayout loginFailed;

  private LoginPopupBinding(@NonNull ConstraintLayout rootView, @NonNull AppCompatButton checkBtn,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout loadingLogin,
      @NonNull LinearLayout loginFailed) {
    this.rootView = rootView;
    this.checkBtn = checkBtn;
    this.linearLayout = linearLayout;
    this.loadingLogin = loadingLogin;
    this.loginFailed = loginFailed;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check_btn;
      AppCompatButton checkBtn = ViewBindings.findChildViewById(rootView, id);
      if (checkBtn == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.loading_login;
      LinearLayout loadingLogin = ViewBindings.findChildViewById(rootView, id);
      if (loadingLogin == null) {
        break missingId;
      }

      id = R.id.login_failed;
      LinearLayout loginFailed = ViewBindings.findChildViewById(rootView, id);
      if (loginFailed == null) {
        break missingId;
      }

      return new LoginPopupBinding((ConstraintLayout) rootView, checkBtn, linearLayout,
          loadingLogin, loginFailed);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
